#Lee Sult
#2015-05-11
#Malware Domain Enrichment Tool
# The purpose of the Malware Domain Enrichment tool is to provide supplemental
# data around malware domain hits from the malware domain list.
# Many organizations only intake the domain list


import urllib2
import sys
import re
import os


DEBUG = False
###########################################################################
# UTILITY FUNCTIONS
###########################################################################

def removeNonAscii(s):
  if not isinstance(s, unicode):
    return s
  return "".join([i if ord(i)<128 else "!~!" for i in s])

def getIPs(line):
  return re.findall(r'(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})', line, re.IGNORECASE)

def getDomains(line):
  return re.findall(r'(?:(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\.)+[A-Z]{2,6}\.?)', line, re.IGNORECASE)

def getHashes(line):
    return re.findall("[A-F0-9]{32}|[A-F0-9]{40}|[A-F0-9]{64}", line, re.IGNORECASE) # get the first MD5 or SHA1 hash (hex coded string)

def extractFromFile(f):
  data = f.read()
  return extractFromList(re.split("\r|\n", data))

def extractFromList(l):
  domains = []
  ips = []
  hashes = []
  for line in l:
      line = removeNonAscii(line)
      domains.extend(getDomains(line))
      ips.extend(getIPs(line))
      hashes.extend(getHashes(line))

  return domains, ips, hashes

def extractAll():
  domains = set()
  ips = set()
  hashes = set()
  total = 0

  if len(sys.argv) < 2:
    print "You must give at least one file name to scan after scan.py"
    sys.exit(1)

  files = sys.argv[1:]
  print "Extracting IOCs from {0} files".format(len(files))

  for filename in files: # Get all the files passed in
    with open(filename) as input_file:
      found_domains, found_ips, found_hashes = extractFromFile(input_file)

    if len(found_domains) == 0 and len(found_ips) == 0 and len(found_hashes) == 0:
      print "ERROR: No IOCs found to scan for file: '{0}'.".format(filename)
      continue
    else:
      total += len(found_domains)
      total += len(found_ips)
      total += len(found_hashes)
      domains.update(found_domains)
      ips.update(found_ips)
      hashes.update(found_hashes)

  if DEBUG:
    print domains
    print ips
    print hashes
  unique = sum([len(domains), len(ips), len(hashes)])
  if unique < total:
      print "Compressed {0} total IOCs to {1}.".format(total, unique)
  return sorted(ips), sorted(domains), sorted(hashes)

def download_mdl():
    response = None
    try:
        response = urllib2.urlopen('http://www.malwaredomainlist.com/mdlcsv.php')
    except IOError:
        print "Unable to Download Malware Domain List"

    if response != None:
        f = open("mdl-list.txt",'w')
        f.write(response.read())
        f.close()

def list_hits():
    hits = [extractAll()]
    hit_list = []
    for i in hits:
        for x in i:
            for y in x:
                hit_list.append(y)

    return hit_list

def get_results():
    command = None
    for i in list_hits():
        print "Inspecting: " + i

        command = "python vt.py  -ur --allinfo " + i + " >> results.txt"
        #print command
        os.system(command)

download_mdl()
#extractAll()

get_results()